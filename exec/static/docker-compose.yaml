services:
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/service-color.inc:/etc/nginx/conf.d/service-color.inc
      - /data/certbot/conf:/etc/letsencrypt
      - /data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    environment:
      TZ: Asia/Seoul
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /data/certbot/conf:/etc/letsencrypt
      - /data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: always
    # 외부 포트를 막아놓는다
    expose: 
      - 3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - /data/mysql/:/var/lib/mysql

  jenkins:
    container_name: jenkins
    image: jenkins/custom
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /jenkins:/var/jenkins_home
      - /env:/env
    ports:
      - 9999:8080
    environment:
      TZ: Asia/Seoul
#    expose:
#      - 9999
#    environment:
#      # 포트 번호를 8080 -> 9999 로 바꾸자
#      JENKINS_OPTS: --httpPort=9999

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - '9092:9092'
    expose:
      - '9094'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@127.0.0.1:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9093,PLAINTEXT://:9094,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9094,EXTERNAL://43.203.230.215:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - TZ=Asia/Seoul

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:9094"
      TZ: Asia/Seoul
    depends_on:
      - kafka

networks:
  default:
    name: today-net
    external: true



